# For more inspiration, look here:
# https://github.com/bevyengine/bevy/blob/main/.github/workflows/ci.yml

name: Test & Build

on:
  #schedule:
  #  - cron: '0 18 * * 5'
  pull_request:
  push:
    branches-ignore:
      - 'dependabot/**'
      - staging-squash-merge.tmp

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    strategy:
      matrix:
        #os: [ubuntu-latest]
        os: [windows-latest, ubuntu-latest, macos-latest]
        toolchain: [stable]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          profile: minimal
      - name: Setup | CI dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends -y libasound2-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libudev-dev
        if: runner.os == 'linux'
      - uses: Swatinem/rust-cache@v1
      - run: cargo check --all-features

  clippy:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy
      - name: Setup | CI dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends -y libasound2-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libudev-dev
        if: runner.os == 'linux'
      - uses: Swatinem/rust-cache@v1
      - run: cargo clippy --all-targets --all-features -- -D warnings

  format:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
      - uses: Swatinem/rust-cache@v1
      - run: cargo fmt --all -- --check

  test:
    needs: check
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        #os: [windows-latest, ubuntu-latest, macos-latest]
        toolchain: [stable]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          profile: minimal
      - name: Setup | CI dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends -y libasound2-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libudev-dev
        if: runner.os == 'linux'
      - uses: Swatinem/rust-cache@v1
      - run: cargo test
